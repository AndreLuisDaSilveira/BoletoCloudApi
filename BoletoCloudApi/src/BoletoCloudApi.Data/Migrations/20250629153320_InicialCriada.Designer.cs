// <auto-generated />
using System;
using BoletoCloudApi.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BoletoCloudApi.Data.Migrations
{
    [DbContext(typeof(MeuDbContext))]
    [Migration("20250629153320_InicialCriada")]
    partial class InicialCriada
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BoletoCloudApi.Business.Models.Beneficiario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<Guid>("BoletoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Cprf")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Localidade")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.HasKey("Id");

                    b.HasIndex("BoletoId")
                        .IsUnique();

                    b.ToTable("Beneficiarios", (string)null);
                });

            modelBuilder.Entity("BoletoCloudApi.Business.Models.Boleto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CriadoEm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<DateTime>("Emissao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Sequencial")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Token")
                        .HasColumnType("varchar(500)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Vencimento")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Boletos", (string)null);
                });

            modelBuilder.Entity("BoletoCloudApi.Business.Models.ContaBancaria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Agencia")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Banco")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("BoletoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Carteira")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Sequencial")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BoletoId")
                        .IsUnique();

                    b.ToTable("ContaBancarias", (string)null);
                });

            modelBuilder.Entity("BoletoCloudApi.Business.Models.Pagador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<Guid>("BoletoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Localidade")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.HasKey("Id");

                    b.HasIndex("BoletoId")
                        .IsUnique();

                    b.ToTable("Pagadores", (string)null);
                });

            modelBuilder.Entity("BoletoCloudApi.Business.Models.Beneficiario", b =>
                {
                    b.HasOne("BoletoCloudApi.Business.Models.Boleto", "Boleto")
                        .WithOne("Beneficiario")
                        .HasForeignKey("BoletoCloudApi.Business.Models.Beneficiario", "BoletoId")
                        .IsRequired();

                    b.Navigation("Boleto");
                });

            modelBuilder.Entity("BoletoCloudApi.Business.Models.ContaBancaria", b =>
                {
                    b.HasOne("BoletoCloudApi.Business.Models.Boleto", "Boleto")
                        .WithOne("Conta")
                        .HasForeignKey("BoletoCloudApi.Business.Models.ContaBancaria", "BoletoId")
                        .IsRequired();

                    b.Navigation("Boleto");
                });

            modelBuilder.Entity("BoletoCloudApi.Business.Models.Pagador", b =>
                {
                    b.HasOne("BoletoCloudApi.Business.Models.Boleto", "Boleto")
                        .WithOne("Pagador")
                        .HasForeignKey("BoletoCloudApi.Business.Models.Pagador", "BoletoId")
                        .IsRequired();

                    b.Navigation("Boleto");
                });

            modelBuilder.Entity("BoletoCloudApi.Business.Models.Boleto", b =>
                {
                    b.Navigation("Beneficiario");

                    b.Navigation("Conta");

                    b.Navigation("Pagador");
                });
#pragma warning restore 612, 618
        }
    }
}
